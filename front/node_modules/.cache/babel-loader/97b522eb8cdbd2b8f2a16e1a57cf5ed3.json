{"ast":null,"code":"import _slicedToArray from \"/mnt/c/Users/akthd/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/werewolf/werewolf/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/akthd/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/werewolf/werewolf/front/src/components/MessageForm.jsx\";\nimport React, { useState, useCallback, useContext } from \"react\";\nimport { SocketContext, SOCKET_EVENT } from \"./../service/socket\";\nfunction MessageForm(_ref) {\n  var nickname = _ref.nickname;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    typingMessage = _useState2[0],\n    setTypingMessage = _useState2[1];\n  var socket = useContext(SocketContext);\n\n  // textarea에서 텍스트를 입력하면 typingMessage state를 변경합니다.\n  var handleChangeTypingMessage = useCallback(function (event) {\n    setTypingMessage(event.target.value);\n  }, []);\n\n  // 버튼을 누르면 실행합니다.\n  var handleSendMesssage = useCallback(function () {\n    // 공백을 trim()으로 제거합니다.\n    var noContent = typingMessage.trim() === \"\";\n\n    // 아무 메시지도 없으면 아무 일도 발생하지 않습니다.\n    if (noContent) {\n      return;\n    }\n\n    // 메시지가 있으면 nickname과 message를 SEND_MESSAGE 이벤트 타입과 함께 소켓 서버로 전송합니다.\n    socket.emit(SOCKET_EVENT.SEND_MESSAGE, {\n      nickname: nickname,\n      content: typingMessage\n    });\n    // state값은 공백으로 변경해줍니다.\n    setTypingMessage(\"\");\n  }, [socket, nickname, typingMessage]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    maxLength: 400,\n    autoFocus: true,\n    value: typingMessage,\n    onChange: handleChangeTypingMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary send-btn\",\n    onClick: handleSendMesssage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"\\uC804\\uC1A1\")));\n}\nexport default MessageForm;","map":{"version":3,"names":["React","useState","useCallback","useContext","SocketContext","SOCKET_EVENT","MessageForm","_ref","nickname","_useState","_useState2","_slicedToArray","typingMessage","setTypingMessage","socket","handleChangeTypingMessage","event","target","value","handleSendMesssage","noContent","trim","emit","SEND_MESSAGE","content","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","maxLength","autoFocus","onChange","type","onClick"],"sources":["/mnt/c/Users/akthd/OneDrive/바탕 화면/werewolf/werewolf/front/src/components/MessageForm.jsx"],"sourcesContent":["import React, { useState, useCallback, useContext } from \"react\";\r\n\r\nimport { SocketContext, SOCKET_EVENT } from \"./../service/socket\";\r\n\r\nfunction MessageForm({ nickname }) {\r\n  const [typingMessage, setTypingMessage] = useState(\"\");\r\n  const socket = useContext(SocketContext);\r\n\r\n  // textarea에서 텍스트를 입력하면 typingMessage state를 변경합니다.\r\n  const handleChangeTypingMessage = useCallback(event => {\r\n    setTypingMessage(event.target.value);\r\n  }, []);\r\n\r\n // 버튼을 누르면 실행합니다.\r\n  const handleSendMesssage = useCallback(() => {\r\n    // 공백을 trim()으로 제거합니다.\r\n    const noContent = typingMessage.trim() === \"\";\r\n\r\n    // 아무 메시지도 없으면 아무 일도 발생하지 않습니다.\r\n    if (noContent) {\r\n      return;\r\n    }\r\n\r\n    // 메시지가 있으면 nickname과 message를 SEND_MESSAGE 이벤트 타입과 함께 소켓 서버로 전송합니다.\r\n    socket.emit(SOCKET_EVENT.SEND_MESSAGE, {\r\n      nickname,\r\n      content: typingMessage,\r\n    });\r\n    // state값은 공백으로 변경해줍니다.\r\n    setTypingMessage(\"\");\r\n  }, [socket, nickname, typingMessage]);\r\n\r\n  return (\r\n    <form className=\"card\">\r\n      <div className=\"d-flex align-items-center\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          maxLength={400}\r\n          autoFocus\r\n          value={typingMessage}\r\n          onChange={handleChangeTypingMessage}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary send-btn\"\r\n          onClick={handleSendMesssage}\r\n        >\r\n          전송\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MessageForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAEhE,SAASC,aAAa,EAAEC,YAAY,QAAQ,qBAAqB;AAEjE,SAASC,WAAWA,CAAAC,IAAA,EAAe;EAAA,IAAZC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAAA,IAAAC,SAAA,GACaR,QAAQ,CAAC,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAMI,MAAM,GAAGX,UAAU,CAACC,aAAa,CAAC;;EAExC;EACA,IAAMW,yBAAyB,GAAGb,WAAW,CAAC,UAAAc,KAAK,EAAI;IACrDH,gBAAgB,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEP;EACC,IAAMC,kBAAkB,GAAGjB,WAAW,CAAC,YAAM;IAC3C;IACA,IAAMkB,SAAS,GAAGR,aAAa,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE;;IAE7C;IACA,IAAID,SAAS,EAAE;MACb;IACF;;IAEA;IACAN,MAAM,CAACQ,IAAI,CAACjB,YAAY,CAACkB,YAAY,EAAE;MACrCf,QAAQ,EAARA,QAAQ;MACRgB,OAAO,EAAEZ;IACX,CAAC,CAAC;IACF;IACAC,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,CAACC,MAAM,EAAEN,QAAQ,EAAEI,aAAa,CAAC,CAAC;EAErC,oBACEZ,KAAA,CAAAyB,aAAA;IAAMC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpBhC,KAAA,CAAAyB,aAAA;IAAKC,SAAS,EAAC,2BAA2B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxChC,KAAA,CAAAyB,aAAA;IACEC,SAAS,EAAC,cAAc;IACxBO,SAAS,EAAE,GAAI;IACfC,SAAS;IACThB,KAAK,EAAEN,aAAc;IACrBuB,QAAQ,EAAEpB,yBAA0B;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACrC,CAAC,eACFhC,KAAA,CAAAyB,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbV,SAAS,EAAC,0BAA0B;IACpCW,OAAO,EAAElB,kBAAmB;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7B,cAEO,CACL,CACD,CAAC;AAEX;AAEA,eAAe1B,WAAW"},"metadata":{},"sourceType":"module"}